name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.local/lib/python3.11/site-packages
        key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-
    
    - name: Cache browser dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/selenium
          ~/.wdm
          /opt/hostedtoolcache/Python/3.11.*/x64/lib/python3.11/site-packages/webdriver_manager
        key: ${{ runner.os }}-browser-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-browser-
    
    - name: Ensure selenium cache directory exists
      run: |
        mkdir -p ~/.cache/selenium
        mkdir -p ~/.wdm
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Validate manual testing documentation
      run: |
        echo "üîç Validating manual QA documentation..."
        python qa/manual/validate_manual_tests.py
    
    - name: Setup browser environment (optimized)
      run: |
        echo "üåê Setting up browser environment..."
        # Remove snap firefox and install regular firefox
        sudo snap remove firefox 2>/dev/null || true
        sudo apt-get update -qq
        sudo apt-get install -y firefox
        
        # Pre-download geckodriver with error handling
        python -c "
        try:
            from webdriver_manager.firefox import GeckoDriverManager
            driver_path = GeckoDriverManager().install()
            print(f'‚úÖ Geckodriver installed at: {driver_path}')
        except Exception as e:
            print(f'‚ö†Ô∏è Geckodriver install warning: {e}')
        " || echo "Geckodriver setup completed with warnings"
    
    - name: Run full QA pipeline with browser tests
      run: |
        chmod +x ci.sh
        if [ -n "$GNEWS_API_KEY" ]; then
          echo "‚úÖ API key available - running full tests"
          SKIP_BROWSER_TESTS=false ./ci.sh
        else
          echo "‚ö†Ô∏è  No API key - running tests without real API calls"
          SKIP_BROWSER_TESTS=false ./ci.sh
        fi
      env:
        GNEWS_API_KEY: ${{ secrets.GNEWS_API_KEY }}
        PYTHONPATH: ${{ github.workspace }}/app
    
    - name: Upload test results and coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: qa-test-results
        path: |
          .coverage
          qa/reports/
          htmlcov/
        retention-days: 30
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: always()
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: .coverage
        flags: unittests
        name: gnews-fetcher-coverage
        fail_ci_if_error: false
